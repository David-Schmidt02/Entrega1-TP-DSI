@startuml trabajoPractico

'Clase padre de contribuyente y visualizador

class Visitante {
    registrado: bool
}

class Administrador extends Visitante {

}

class Contribuyente extends Visitante {
    nombre: string
    apellido: string
    edad: int
    validarEdad()
}

class Visualizador extends Visitante {
    
}

class Coleccion {
    fuenteColeccion : Fuente
    tituloColeccion: string
    descripcionColeccion: string
    criteriosPertenencia: <List> CriterioPertenencia
    hechos: <List> Hecho
    agregarHecho(hecho: Hecho): void
}

class Fuente {
    hechos: <List> Hecho   
}

class Fuente_estatica extends Fuente {
    direccion_archivo_csv: string
}

class Fuente_dinamica extends Fuente {}

' DUDA => Criterios: lista de valores/atributos/lo que sea/ o clase
' Se diagraman las fuentes en el DC? o podemos dejarlo como un atributo
' "Obtenci√≥n de hechos en lote por archivos CSV, implicancias en el diagrama de clase
' 
' https://www.youtube.com/watch?v=IpDr3I1X7Os
abstract class CriterioPertenencia {
    cumpleConCriterio(hecho: Hecho) : bool
}

class CriterioTitulo extends CriterioPertenencia {
    titulo: string
    cumpleConCriterio(hecho: Hecho) : bool
}

class CriterioDescripcion extends CriterioPertenencia {
    descripcion: string
    cumpleConCriterio(hecho: Hecho) : bool
}

class CriterioCategoria extends CriterioPertenencia {
    categoria: string
    cumpleConCriterio(hecho: Hecho) : bool
}

class CriterioUbicacion extends CriterioPertenencia {
    ubicacion: Ubicacion
    cumpleConCriterio(hecho: Hecho) : bool
}

class CriterioFecha extends CriterioPertenencia {
    fechaInicial: LocalDate
    fechaFinal: LocalDate
    cumpleConCriterio(hecho: Hecho) : bool
}

class CriterioOrigen extends CriterioPertenencia {
    origen: Origen_Fuente
    cumpleConCriterio(hecho: Hecho) : bool
}

abstract class Hecho {
    titulo: string
    descripcion: string
    categoria: string 
    coordenadas: Coordenada
    fechaAcontecimiento: LocalDate
    fechaCarga: LocalDate
    origen: Origen_Fuente
    estaOculto : bool
    etiquetas: <List> Etiqueta

    estaRepetido()
}

class Etiqueta {
    descripcion: string
}

class Ubicacion {
    latitud: float
    longitud: float
}

class HechoMultimedia extends Hecho {
    contenidoMultimedia: <List> Path
}

class HechoTextual extends Hecho {
    cuerpo: string
}

class SolicitudEliminacion {
    hecho : Hecho
    justificacion: string
    estado: Estado

    esCorrecta(): bool
}

enum Estado {
    ACEPTADA
    PENDIENTE
    RECHAZADA
}

enum Origen_Fuente {
    ESTATICA 
    DINAMICA
    INTERMEDIARIA
}

Hecho -- Etiqueta
Hecho -- Origen_Fuente
Hecho --left SolicitudEliminacion
Hecho --up Coleccion
Hecho -- Ubicacion
Hecho -- CriterioPertenencia
Coleccion -- Fuente
SolicitudEliminacion --left Estado
@enduml

' JUSTIFICACIONES DE: ESTAOCULTO, CRITERIOS PERTENENCIA, VISUALIZADOR, HECHO(CLASE ABSTRACTA), HECHO COMO CLASE ABSTRACTA